version=2
@Text.log([CODE])
@Text.log(Pokémon FireRed Universal 3D Crash Log V <Register.value(System.Game Version)>)
@Text.log(Pokémon FireRed Universal 3D has crashed!)
:select:<System.random(1,19)>
:when:1
	@Text.log(// I AM ERROR!)
:when:2
	@Text.log(// Minecraft crashed.)
:when:3
	@Text.log(// Missingno.)
:when:4
	@Text.log(// 1 ERROR)
:when:5
	@Text.log(// GET TO DA CHOPPA)
:when:6
	@Text.log(// Fire attacks might be super effective...)
:when:7
	@Text.log(// Does this help?)
:when:8
	@Text.log(// Work! Pleeeeeeeease?)
:when:9
	@Text.log(// WHAT IS THIS?)
:when:10
	@Text.log(// I find your lack of [ERROR] disturbing.)
:when:11
	@Text.log(// Blame Darkfire.)
:when:12
	@Text.log(// RTFM)
:when:13
	@Text.log(// FEZ II announced.)
:when:14
	@Text.log(// At least it's not a Blue Screen.)
:when:15
	@Text.log(// Kernel PANIC)
:when:16
	@Text.log(// I'm sorry, Dave, I'm afraid I can't do that.)
:when:17
	@Text.log(// Never gonna give you up ~)
:when:18
	@Text.log(// Wouldn't have happend with Swift.)
:when:19
	@Text.log(// Team Rocket blasting off again!)
:endwhen
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(This is the latest data before this crash happens:)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log(Data: Pokemon\Save\<Player.name>*\Player.dat)
@Text.log(Note: Not all data are captured in the backup file.)
@Text.log(---------------------------------------------------------------------------------)
@Text.log(Name|<Player.name>)
@Text.log(Position|<Player.position>)
@Text.log(MapFile|<Level.mapfile>)
@Text.log(Rotation|<Player.facing>)
@Text.log(RivalName|<Rival.name>)
@Text.log(Money|<Player.money>)
@Text.log(Badges|<Player.badges>)
@Text.log(Gender|<Register.value(System.PlayerGender)>)
@Text.log(OT|<Player.ot>)
:if:<Register.value(12\LittleRootTown\ProfBirchLab)>=4
	@Text.log(hasPokedex|1)
:else
	@Text.log(hasPokedex|0)
:endif
@Text.log(hasPokegear|0)
@Text.log(skin|<Player.skin>)
@Text.log(location|<Level.filename>)
@Text.log(DiagonalMovement|0)
@Text.log(saveCreated|Indev <Register.value(System.P3D Version)>)
@Text.log(GameMode|Pokémon FireRed Universal 3D)
:if:<Level.surfing>=false
	@Text.log(Surfing|0)
:else
	@Text.log(Surfing|1)
:endif
@Text.log(BP|<Player.bp>)
@Text.log(---------------------------------------------------------------------------------)
@Text.log(Data: Pokemon\Save\<Player.name>*\Party.dat)
@Text.log(Note: Not all data are captured in the backup file.)
@Text.log(---------------------------------------------------------------------------------)
@Storage.set(int,BackupLog.Party.i,0)
:while:<Storage.get(int,BackupLog.Party.i)><<Pokemon.count>
	@Storage.update(int,BackupLog.Party.i,add,1)
	@Text.log(<Pokemon.data(<Storage.get(int,BackupLog.Party.i)>-1)>)
:endwhile
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(Game information:)
@Text.log()
@Text.log(Pokémon 3D Indev version: <Register.value(System.P3D Version)>)
@Text.log(Pokemon FireRed Universal 3D Indev version: <Register.value(System.Game Version)>)
@Text.log(Active Game ID: <Register.value(System.Game ID)>)
@Text.log(Auto Save?: <Register.value(System.Auto Save)>)
@Text.log(Skip Intro?: <Register.value(System.Skip Intro)>)
@Text.log(Skip Mom Story?: <Register.value(System.Skip Mom Story)>)
@Text.log(Skip Rival Story?: <Register.value(System.Skip Rival Story)>)
@Text.log(Test Mode?: <Register.value(System.Test Mode)>)
@Text.log(Skip GlobalRegisterValidation?: <Register.value(System.Skip GlobalRegisterValidation)>)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(System specifications:)
@Text.log()
@Text.log(System time (unix timestamp): <System.unixtimestamp>)
@Text.log()
:end
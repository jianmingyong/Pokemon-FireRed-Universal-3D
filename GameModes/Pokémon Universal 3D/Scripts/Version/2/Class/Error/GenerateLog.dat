version=2
##############################
# Sub Error.GenerateLog
##############################

:if:<Storage.get(bool,Security.FileValidation.Checks)>=true
	@Storage.set(bool,Security.FileValidation.ScriptExist,true)
	:end
:endif

@Text.log([CODE])
@Text.log(Pokémon Universal 3D Crash Log Version <Register.value(Global.Version)>)
@Text.log(Pokémon Universal 3D has crashed!)
:select:<System.random(1,24)>
:when:1
	@Text.log(// I AM ERROR!)
:when:2
	@Text.log(// Minecraft crashed.)
:when:3
	@Text.log(// Missingno.)
:when:4
	@Text.log(// 1 ERROR)
:when:5
	@Text.log(// GET TO DA CHOPPA)
:when:6
	@Text.log(// Fire attacks might be super effective...)
:when:7
	@Text.log(// Does this help?)
:when:8
	@Text.log(// Work! Pleeeeeeeease?)
:when:9
	@Text.log(// WHAT IS THIS?)
:when:10
	@Text.log(// I find your lack of [ERROR] disturbing.)
:when:11
	@Text.log(// Blame Darkfire.)
:when:12
	@Text.log(// RTFM)
:when:13
	@Text.log(// FEZ II announced.)
:when:14
	@Text.log(// At least it's not a Blue Screen.)
:when:15
	@Text.log(// Kernel PANIC)
:when:16
	@Text.log(// I'm sorry, Dave, I'm afraid I can't do that.)
:when:17
	@Text.log(// Never gonna give you up ~)
:when:18
	@Text.log(// Wouldn't have happend with Swift.)
:when:19
	@Text.log(// Team Rocket blasting off again!)
:when:20
	@Text.log(// Snorlax just sat on your computer!)
:when:21
	@Text.log(// Wut?)
:when:22
	@Text.log(// Mojang buys Microsoft! Get your new Mojang operating system now. With more blocks and scrolls.)
:when:23
	@Text.log(// HλLF-LIFE 2 confirmed)
:when:24
	@Text.log(// (╯°□°）╯︵ ┻━┻)
:endwhen
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(Game information:)
@Text.log()
@Text.log(Pokémon Universal 3D Version: <Register.value(Global.Version)>)
@Text.log(Content Pack Required: )
@Text.log(Active GameMode: <Register.value(Global.GameName)>)
@Storage.set(int,StackTrace.Get,1)
@Script.start(Version\2\Class\StackTrace\Get)
@Text.log(Actionscript: <Storage.get(str,Global.Return)>)
:if:<Storage.get(int,Error.ID)>=1
	@Text.log(File Validation: Fail)
:else
	@Text.log(File Validation: Pass)
:endif
@Text.log(SandBox Mode: <Register.value(Global.SandBoxMode)>)
@Text.log(Token: <Register.value(Global.Token)>)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(System specifications:)
@Text.log()
@Text.log(System time (unix timestamp): <System.unixtimestamp>)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(Error information:)
@Text.log()
@Text.log(Message: <Storage.get(str,Error.Message)>)
@Text.log(HelpLink: <Storage.get(str,Error.HelpLink)>)
@Text.log(Data: <Storage.get(str,Error.Data)>)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(Error solution:)
@Text.log((The provided solution might not work for your problem))
@Text.log()
@Text.log(Error ID: <Storage.get(int,Error.ID)>)
@Text.log(Error Type: <Storage.get(str,Error.Type)>)
@Text.log(Error Description: <Storage.get(str,Error.Description)>)
@Text.log(Error Solution: <Storage.get(str,Error.Solution)>)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(CallStack:)
@Storage.set(int,StackTrace.Get,1)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,2)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,3)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,4)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,5)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,6)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,7)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,8)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,9)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Storage.set(int,StackTrace.Get,10)
@Script.start(Version\2\Class\StackTrace\Get)
:if:<not><Storage.get(str,Global.Return)>=Nothing
	@Text.log(at <Storage.get(str,Global.Return)>)
:endif
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(Environment Dump:)
@Text.log()
@Text.log(...)
@Text.log()
@Text.log(---------------------------------------------------------------------------------)
@Text.log()
@Text.log(You should report this error.)
@Text.log()
@Text.log(Go to "http://pokemon3d.net/forum/threads/6297/" to report this crash there.)
@Text.log()
@Text.log(DO NOT POST THIS CUSTOM CRASH LOG INTO "http://pokemon3d.net/forum/forums/6/".)
@Text.log([/CODE])
@Script.start(Version\2\Class\Screen\ErrorScreen)
:end
version=2
##############################
# Sub Security.FileValidation
##############################

@Storage.set(str,StackTrace.Set,Version\2\Class\Security\FileValidation.dat)
@Script.start(Version\2\Class\StackTrace\Set)

@Storage.set(int,Security.FileValidation.CurrentIndex,0)

:if:<not><Level.levelfile>=Screen\MainMenu.dat
	@Screen.fadeout
	@Camera.set(0,0,0,0,0)
	@Player.warp(Screen\MainMenu.dat,0,0,0,0)
	@Level.update
:endif

:while:<Entity.opacity(1)><100
	@Entity.setopacity(1,<Entity.opacity(1)>+10)
	@Level.wait(1)
	@Level.update
:endwhile
:while:<Entity.opacity(2)><100
	@Entity.setopacity(2,<Entity.opacity(2)>+10)
	@Level.wait(1)
	@Level.update
:endwhile

@Camera.fix
@Storage.set(str,Function.Title,show)
@Storage.set(str,Function.Title.show.1,> Pokémon Universal 3D Crash Log V <Register.value(Global.Version)>)
@Storage.set(str,Function.Title.show.2,> Pokémon Universal 3D has crashed!)
@Storage.set(str,Function.Title.show.3,> ---------------------------------------------------------------------------------)
@Storage.set(str,Function.Title.show.4,> )
@Storage.set(str,Function.Title.show.5,> Error information:)
@Storage.set(str,Function.Title.show.6,> )
@Storage.set(str,Function.Title.show.7,> Message: The game detected missing files.)
@Storage.set(str,Function.Title.show.8,> )
@Storage.set(str,Function.Title.show.9,> ---------------------------------------------------------------------------------)
@Storage.set(int,Function.Title.show.maxindex,9)
@Script.start(Version\2\Class\Function\Title)

# Insert a list of core script to check
# All File have to return the value from a storage to valid the script have been called.
# List of script in ascending order.

@Storage.set(str,Security.FileExists,Version\2\Class\Error\GenerateLog)
@Script.start(Version\2\Class\Security\FileExists)

# End of File Validation

@Title.clear
@Camera.defix

:while:<Entity.opacity(1)>>0
	@Entity.setopacity(1,<Entity.opacity(1)>-10)
	@Level.wait(1)
	@Level.update
:endwhile

:if:<Storage.get(int,Security.FileValidation.CurrentIndex)>>1
	@Script.start(Version\2\Class\Error\ID 1)
:endif
:end
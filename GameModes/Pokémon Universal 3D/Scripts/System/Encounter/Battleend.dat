version=2
:if:<Register.value(System.New BattleV2 Exp)>=true
	@Storage.set(int,System.Encounter.Experience,0)
	@Storage.set(int,System.Encounter.Experience.Gain,0)
	:if:<Pokemon.count>>0 <and> <not><Pokemon.totalexp(0)>=<Storage.get(int,System.Encounter.Pokemon.1.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(0)>-<Storage.get(int,System.Encounter.Pokemon.1.TotalEXP)>)>)
	:endif
	:if:<Pokemon.count>>1 <and> <not><Pokemon.totalexp(1)>=<Storage.get(int,System.Encounter.Pokemon.2.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(1)>-<Storage.get(int,System.Encounter.Pokemon.2.TotalEXP)>)>)
	:endif
	:if:<Pokemon.count>>2 <and> <not><Pokemon.totalexp(2)>=<Storage.get(int,System.Encounter.Pokemon.3.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(2)>-<Storage.get(int,System.Encounter.Pokemon.3.TotalEXP)>)>)
	:endif
	:if:<Pokemon.count>>3 <and> <not><Pokemon.totalexp(3)>=<Storage.get(int,System.Encounter.Pokemon.4.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(3)>-<Storage.get(int,System.Encounter.Pokemon.4.TotalEXP)>)>)
	:endif
	:if:<Pokemon.count>>4 <and> <not><Pokemon.totalexp(4)>=<Storage.get(int,System.Encounter.Pokemon.5.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(4)>-<Storage.get(int,System.Encounter.Pokemon.5.TotalEXP)>)>)
	:endif
	:if:<Pokemon.count>>5 <and> <not><Pokemon.totalexp(5)>=<Storage.get(int,System.Encounter.Pokemon.6.TotalEXP)>
		@Storage.set(int,System.Encounter.Experience,<Storage.get(int,System.Encounter.Experience)>+<Math.int(<Pokemon.totalexp(5)>-<Storage.get(int,System.Encounter.Pokemon.6.TotalEXP)>)>)
	:endif
	:if:<not><Storage.get(int,System.Encounter.Experience)>=0
		:if:<Pokemon.count>>0 <and> <not><Pokemon.needexp(0)>=0 <and> <not><Pokemon.needexp(0)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(0)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(0)>
				@Pokemon.gainexp(0,<Pokemon.needexp(0)>)
			:else
				@Pokemon.gainexp(0,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Pokemon.count>>1 <and> <not><Pokemon.needexp(1)>=0 <and> <not><Pokemon.needexp(1)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(1)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(1)>
				@Pokemon.gainexp(1,<Pokemon.needexp(1)>)
			:else
				@Pokemon.gainexp(1,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Pokemon.count>>2 <and> <not><Pokemon.needexp(2)>=0 <and> <not><Pokemon.needexp(2)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(2)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(2)>
				@Pokemon.gainexp(2,<Pokemon.needexp(2)>)
			:else
				@Pokemon.gainexp(2,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Pokemon.count>>3 <and> <not><Pokemon.needexp(3)>=0 <and> <not><Pokemon.needexp(3)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(3)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(3)>
				@Pokemon.gainexp(3,<Pokemon.needexp(3)>)
			:else
				@Pokemon.gainexp(3,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Pokemon.count>>4 <and> <not><Pokemon.needexp(4)>=0 <and> <not><Pokemon.needexp(4)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(4)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(4)>
				@Pokemon.gainexp(4,<Pokemon.needexp(4)>)
			:else
				@Pokemon.gainexp(4,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Pokemon.count>>5 <and> <not><Pokemon.needexp(5)>=0 <and> <not><Pokemon.needexp(5)><0
			:if:<Storage.get(int,System.Encounter.Experience)>><Pokemon.needexp(5)> <or> <Storage.get(int,System.Encounter.Experience)>=<Pokemon.needexp(5)>
				@Pokemon.gainexp(5,<Pokemon.needexp(5)>)
			:else
				@Pokemon.gainexp(5,<Storage.get(int,System.Encounter.Experience)>)
			:endif
			@Storage.update(int,System.Encounter.Experience.Gain,add,1)
		:endif
		:if:<Storage.get(int,System.Encounter.Experience.Gain)>=<Pokemon.count>
			@Text.show(All your Pokémon have gained~Additional <Storage.get(int,System.Encounter.Experience)> EXP from battle.)
		:else
			@Text.show(<Storage.get(int,System.Encounter.Experience.Gain)> of your Pokémon have gained~Additional <Storage.get(int,System.Encounter.Experience)> EXP from battle.)
		:end
	:endif
	@Script.start(System\Encounter\Battleint)
:endif
:end
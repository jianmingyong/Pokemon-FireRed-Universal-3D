version=2
# This is a API for Random Dungeon Generator.
# You will require a compatible map to run this.

##############################
# Main Settings
##############################

# Define Map Size.
@Storage.set(int,MysteryDungeon.MapSizeX,50)
@Storage.set(int,MysteryDungeon.MapSizeZ,50)

# Define Room Size.
# By default, Min Room Size is 5 by 5.
@Storage.set(int,MysteryDungeon.MaxRoomSizeX,10)
@Storage.set(int,MysteryDungeon.MaxRoomSizeZ,10)

# Define Number of Tiles to be Removed at the same time.
# The bigger the value, the faster it process. 
# Max value is 10.
@Storage.set(int,MysteryDungeon.Processor,10)

##############################
# Do not touch anything below here
##############################
:if:<Register.registered(MysteryDungeon.SaveMap)>=false
	@Register.register(MysteryDungeon.SaveMap)
:endif
@Title.add(Generating... Please wait for a while.,2147483647,255,255,255,2,true,0,0)

# Init Variable.
@Storage.set(int,MysteryDungeon.NumberOfRoomGenerated,0)
@Storage.set(int,MysteryDungeon.MaxNumberOfRoomGenerated,<System.random(5,8)>)
@Storage.set(int,MysteryDungeon.NumberOfWallGenerated,0)
@Storage.set(int,MysteryDungeon.Processor,<Math.clamp(<Storage.get(int,MysteryDungeon.Processor)>,1,10)>)
@Storage.set(int,MysteryDungeon.MaxRoomSizeX,<Math.clamp(<Storage.get(int,MysteryDungeon.MaxRoomSizeX)>,5,<Storage.get(int,MysteryDungeon.MapSizeX)>-1)>)
@Storage.set(int,MysteryDungeon.MaxRoomSizeZ,<Math.clamp(<Storage.get(int,MysteryDungeon.MaxRoomSizeZ)>,5,<Storage.get(int,MysteryDungeon.MapSizeZ)>-1)>)
@Storage.set(bool,MysteryDungeon.MasterValid,true)
@Storage.set(int,MysteryDungeon.NumberofRoomEntityStore,0)

# Generate Random Rooms.
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)
@Script.start(System\MysteryDungeon\ValidRoom)
@Script.start(System\MysteryDungeon\GenerateRoom)

#:while:<Storage.get(bool,MysteryDungeon.MasterValid)>=true
	# Dig a Random Object.
#:endwhile

# Warp Player to a walkable zone.
@Storage.set(int,MysteryDungeon.RandomRoomID,<System.random(0,<Storage.get(int,MysteryDungeon.NumberOfRoomGenerated)>-1)>)
@Storage.set(int,MysteryDungeon.WarpID,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoomID)>.ID)>)
@Storage.set(int,MysteryDungeon.WarpSizeX,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoomID)>.SizeX)>)
@Storage.set(int,MysteryDungeon.WarpSizeZ,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoomID)>.SizeZ)>)
@Storage.set(int,MysteryDungeon.WarpX,<System.random(<Math.floor(<Storage.get(int,MysteryDungeon.WarpID)>/1000000)>,<Math.int(<Math.floor(<Storage.get(int,MysteryDungeon.WarpID)>/1000000)>+<Storage.get(int,MysteryDungeon.WarpSizeX)>-1)>)>)
@Storage.set(int,MysteryDungeon.WarpZ,<System.random(<Storage.get(int,MysteryDungeon.WarpID)>-<Math.int(<Math.floor(<Storage.get(int,MysteryDungeon.WarpID)>/1000000)>*1000000)>,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.WarpID)>-<Math.int(<Math.floor(<Storage.get(int,MysteryDungeon.WarpID)>/1000000)>*1000000)>)>+<Storage.get(int,MysteryDungeon.WarpSizeZ)>-1)>)>)
@Player.warp(<Storage.get(int,MysteryDungeon.WarpX)>,0.1,<Storage.get(int,MysteryDungeon.WarpZ)>)
@Level.update
@Title.clear
:end
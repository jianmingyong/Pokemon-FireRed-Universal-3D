version=2
# This is part of the Mystery Dungeon Generator API.
# Init Variable.
@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
@Storage.set(int,MysteryDungeon.CurrentDigWallZ,<Storage.get(int,MysteryDungeon.WallPositionZ)>)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,0)
@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,0)
@Storage.set(bool,MysteryDungeon.WallDigCompleted,false)

# Global Variable.
:if:<Register.registered(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.ID)>=true <and> <Register.registered(MysteryDungeon.SaveMap)>=true
	@Register.unregister(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.ID,int)
:endif
:if:<Register.registered(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeX)>=true <and> <Register.registered(MysteryDungeon.SaveMap)>=true
	@Register.unregister(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeX,int)
:endif
:if:<Register.registered(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeZ)>=true <and> <Register.registered(MysteryDungeon.SaveMap)>=true
	@Register.unregister(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeZ,int)
:endif
@Register.register(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.ID,int,<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>*1000000)>+<Storage.get(int,MysteryDungeon.WallPositionZ)>)
@Register.register(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeX,int,<Storage.get(int,MysteryDungeon.WallSizeX)>)
@Register.register(MysteryDungeon.Wall<Storage.get(int,MysteryDungeon.NumberOfWallGenerated)>.SizeZ,int,<Storage.get(int,MysteryDungeon.WallSizeZ)>)

# Dig Wall Procedure.
:while:<Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false
	:if:<Storage.get(int,MysteryDungeon.Processor)>>0
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.1,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>1
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+1-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>2
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.3,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+2-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>3
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.4,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+3-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>4
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.5,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+4-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>5
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.6,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+5-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>6
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.7,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+6-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>7
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.8,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+7-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>8
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.9,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+8-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>9
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*1)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+1)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*2)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+2)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*3)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+3)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*4)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+4)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*5)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+5)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*6)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+6)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*7)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+7)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*8)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+8)
		:endif
		:if:<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>-1)> <and> <Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*10)>)>
			@Storage.set(int,MysteryDungeon.CurrentDigWallID.10,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.CurrentDigWallX)>+9-<Math.int(<Storage.get(int,MysteryDungeon.WallSizeX)>*9)>)>*1000000)>+<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>+9)
		:endif
	:endif
	
	# Digging Algorithm.
	:if:<Storage.get(int,MysteryDungeon.Processor)>>0 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.1)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.1)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>1 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.2)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.2)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>2 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.3)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.3)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>3 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.4)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.4)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>4 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.5)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.5)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>5 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.6)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.6)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>6 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.7)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.7)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>7 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.8)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.8)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>8 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.9)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.9)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
	:if:<Storage.get(int,MysteryDungeon.Processor)>>9 <and> <Storage.get(bool,MysteryDungeon.WallDigCompleted)>=false <and> <Storage.get(int,MysteryDungeon.CurrentDigWallID.10)>>0
		@Entity.remove(<Storage.get(int,MysteryDungeon.CurrentDigWallID.10)>)
		:if:<Storage.get(int,MysteryDungeon.CurrentDigWallX)><<Math.int(<Storage.get(int,MysteryDungeon.WallPositionX)>+<Storage.get(int,MysteryDungeon.WallSizeX)>-1)>
			@Storage.update(int,MysteryDungeon.CurrentDigWallX,add,1)
		:else
			@Storage.update(int,MysteryDungeon.CurrentDigWallZ,add,1)
			@Storage.set(int,MysteryDungeon.CurrentDigWallX,<Storage.get(int,MysteryDungeon.WallPositionX)>)
			:if:<Storage.get(int,MysteryDungeon.CurrentDigWallZ)>><Math.int(<Storage.get(int,MysteryDungeon.WallPositionZ)>+<Storage.get(int,MysteryDungeon.WallSizeZ)>-1)>
				@Storage.set(bool,MysteryDungeon.WallDigCompleted,true)
				:exitwhile
			:endif
		:endif
	:endif
:endwhile
@Level.update
@Storage.update(int,MysteryDungeon.NumberOfWallGenerated,add,1)
:end
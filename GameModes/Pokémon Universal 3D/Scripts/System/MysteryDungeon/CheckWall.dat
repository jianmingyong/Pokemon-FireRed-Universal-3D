version=2
# This is part of the Mystery Dungeon Generator API.
# Init Variable.
@Storage.set(bool,MysteryDungeon.WallHLValid,false)
@Storage.set(bool,MysteryDungeon.WallHRValid,false)
@Storage.set(bool,MysteryDungeon.WallVUValid,false)
@Storage.set(bool,MysteryDungeon.WallVDValid,false)

# Basic Validation Script.
@Storage.set(int,MysteryDungeon.RandomRoom,<Storage.get(int,MysteryDungeon.NumberOfRoomGenerated)>-1)
@Storage.set(int,MysteryDungeon.RandomRoomID,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoom)>.ID)>)
@Storage.set(int,MysteryDungeon.RandomRoomSizeX,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoom)>.SizeX)>)
@Storage.set(int,MysteryDungeon.RandomRoomSizeZ,<Register.value(MysteryDungeon.Room<Storage.get(int,MysteryDungeon.RandomRoom)>.SizeZ)>)
@Storage.set(int,MysteryDungeon.RandomRoomMinX,<Math.floor(<Storage.get(int,MysteryDungeon.RandomRoomID)>/1000000)>)
@Storage.set(int,MysteryDungeon.RandomRoomMinZ,<Storage.get(int,MysteryDungeon.RandomRoomID)>-<Math.int(<Math.floor(<Storage.get(int,MysteryDungeon.RandomRoomID)>/1000000)>*1000000)>)

:end
@Storage.set(int,MysteryDungeon.RandomWallNumber,<System.random(1,4)>)
		@Storage.set(int,MysteryDungeon.CurrentWallProccessed,0)
		:while:<Storage.get(int,MysteryDungeon.CurrentWallProccessed)><<Storage.get(int,MysteryDungeon.RandomWallNumber)>
			:select:<System.random(1,3)>
			:when:1
				:if:<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>-2)>>0
					@Storage.set(int,MysteryDungeon.MaxWallSizeX,<Math.clamp(<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>-1)>/2)>,2,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>-1)>)>)
					@Storage.set(int,MysteryDungeon.WallSizeX,<System.random(2,<Storage.get(int,MysteryDungeon.MaxWallSizeX)>)>)
					@Storage.set(int,MysteryDungeon.WallSizeZ,1)
					@Storage.set(int,MysteryDungeon.WallPositionX,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>-<Storage.get(int,MysteryDungeon.WallSizeX)>)>)
					@Storage.set(int,MysteryDungeon.WallPositionZ,<System.random(<Storage.get(int,MysteryDungeon.RoomPositionZ)>,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>+<Storage.get(int,MysteryDungeon.RoomSizeZ)>-1)>)>)
					@Script.start(System\MysteryDungeon\GenerateWall)
					@Storage.update(int,MysteryDungeon.CurrentWallProccessed,add,1)
				:endif
			:when:2
				:if:<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>+<Storage.get(int,MysteryDungeon.RoomSizeX)>+1)><<Math.int(<Storage.get(int,MysteryDungeon.MapSizeX)>-1)>
					@Storage.set(int,MysteryDungeon.MaxWallSizeX,<Math.clamp(<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.MapSizeX)>-<Storage.get(int,MysteryDungeon.RoomPositionX)>-<Storage.get(int,MysteryDungeon.RoomSizeX)>)>/2)>,2,<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.MapSizeX)>-<Storage.get(int,MysteryDungeon.RoomPositionX)>-<Storage.get(int,MysteryDungeon.RoomSizeX)>)>/2)>)>)
					@Storage.set(int,MysteryDungeon.WallSizeX,<System.random(2,<Storage.get(int,MysteryDungeon.MaxWallSizeX)>)>)
					@Storage.set(int,MysteryDungeon.WallSizeZ,1)
					@Storage.set(int,MysteryDungeon.WallPositionX,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>+<Storage.get(int,MysteryDungeon.RoomSizeX)>)>)
					@Storage.set(int,MysteryDungeon.WallPositionZ,<System.random(<Storage.get(int,MysteryDungeon.RoomPositionZ)>,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>+<Storage.get(int,MysteryDungeon.RoomSizeZ)>-1)>)>)
					@Script.start(System\MysteryDungeon\GenerateWall)
					@Storage.update(int,MysteryDungeon.CurrentWallProccessed,add,1)
				:endif
			:when:3
				:if:<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>-2)>>0
					@Storage.set(int,MysteryDungeon.MaxWallSizeZ,<Math.clamp(<Math.int(<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>-1)>/2)>,2,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>-1)>)>)
					@Storage.set(int,MysteryDungeon.WallSizeX,1)
					@Storage.set(int,MysteryDungeon.WallSizeZ,<System.random(2,<Storage.get(int,MysteryDungeon.MaxWallSizeZ)>)>)
					@Storage.set(int,MysteryDungeon.WallPositionX,<System.random(<Storage.get(int,MysteryDungeon.RoomPositionX)>,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionX)>+<Storage.get(int,MysteryDungeon.RoomSizeX)>-1)>)>)
					@Storage.set(int,MysteryDungeon.WallPositionZ,<Math.int(<Storage.get(int,MysteryDungeon.RoomPositionZ)>-<Storage.get(int,MysteryDungeon.WallSizeZ)>)>)
					@Script.start(System\MysteryDungeon\GenerateWall)
					@Storage.update(int,MysteryDungeon.CurrentWallProccessed,add,1)
				:endif
			:endwhen
		:endwhile